// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PartyPlaylists.MobileAppService.Contexts;

namespace PartyPlaylists.MobileAppService.Migrations
{
    [DbContext(typeof(PlaylistContext))]
    [Migration("20190926214342_AddSongRating")]
    partial class AddSongRating
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PartyPlaylists.MobileAppService.Models.DataModels.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Owner")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("PartyPlaylists.MobileAppService.Models.DataModels.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Artist")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("ServiceAvailableOn");

                    b.HasKey("Id");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("PartyPlaylists.MobileAppService.Models.RoomSong", b =>
                {
                    b.Property<int>("RoomId");

                    b.Property<int>("SongId");

                    b.Property<int>("SongRating");

                    b.HasKey("RoomId", "SongId");

                    b.HasIndex("SongId");

                    b.ToTable("RoomSong");
                });

            modelBuilder.Entity("PartyPlaylists.MobileAppService.Models.RoomSong", b =>
                {
                    b.HasOne("PartyPlaylists.MobileAppService.Models.DataModels.Room", "Room")
                        .WithMany("RoomSongs")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PartyPlaylists.MobileAppService.Models.DataModels.Song", "Song")
                        .WithMany("RoomSongs")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
