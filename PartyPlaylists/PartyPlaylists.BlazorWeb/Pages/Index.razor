@page "/"
@using DataModel = PartyPlaylists.Models.DataModels
@using PartyPlaylists.Services;
@using PartyPlaylists.Models;
@using SpotifyApi.NetCore;
@using System.Web;
@inject NavigationManager NavigationManager
@inject RoomDataStore RoomDataStore
@inject UserAccountsService UserAccountsService


<h1>PartyPlaylists</h1>

<EditForm Model="@room" OnValidSubmit="CreateRoom">
    <label>Room Name:</label>
    <br />
    <InputText @bind-Value="room.Name" />
    <br />
    <label>Owner:</label>
    <br />
    <InputText @bind-Value="room.Owner" />
    <br />
    <br />
    <button type="submit">Create Room</button>
</EditForm>

<br />
<br />
<label>Room ID</label>
<br />
<input type="text" @bind-value="_roomId" />
<br />
<br />
<button type="button" @onclick="JoinRoom">Join Room</button>



@code
{
    private string _parsedAuthCode;
    private string _parsedStateCode;
    private string _roomId;
    private DataModel.Room room = new DataModel.Room();

    protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += LocationChanged();
    }

    private void JoinRoom()
    {
        if (!string.IsNullOrWhiteSpace(_roomId))
        {
            NavigationManager.NavigateTo($"/partyplaylists/room/{_roomId}");
        }
    }

    private async Task CreateRoom()
    {
        room = await RoomDataStore.AddItemAsync(room);
        NavigationManager.NavigateTo($"/partyplaylists/room/{room?.Id.ToString()}");
        JoinRoom();
    }

    private async Task SaveSpotifyTokenToRoom()
    {
        NavigationManager.NavigateTo($"/partyplaylists/room/{_parsedStateCode}");
        BearerAccessRefreshToken token = await UserAccountsService.RequestAccessRefreshToken(_parsedAuthCode);
        await RoomDataStore.AddSpotifyAuthCodeToRoomAsync(_parsedStateCode, token.AccessToken);
    }

    public EventHandler<LocationChangedEventArgs> LocationChanged()
    {
        var uri = new Uri(NavigationManager.Uri);
        _parsedAuthCode = HttpUtility.ParseQueryString(uri.Query).Get("code");
        _parsedStateCode = HttpUtility.ParseQueryString(uri.Query).Get("state");
        if (_parsedAuthCode != null && _parsedStateCode != null)
            SaveSpotifyTokenToRoom();

        return null;
    }
}
